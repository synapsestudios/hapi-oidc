# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:

  test:
    docker:
      - image: circleci/node:12.16.3
    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Workspace Dependencies
          command: yarn install --frozen-lockfile

      - run:
          name: Build (checks .ts types)
          command: yarn build
          when: always

      - run:
          name: Run Linter
          command: yarn run lint:ci
          when: always

      - run:
          name: Run Tests
          command: yarn test:ci
          when: always

      - run:
          name: Check Code Formatting
          command: yarn prettier:ci
          when: always

      - store_test_results:
          path: reports
          when: always

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  # api:

  #     - image: circleci/redis
  #     - image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
  #       environment:
  #         discovery.type: single-node
  #         ES_JAVA_OPTS: "-Xms750m -Xmx750m"
  #   steps:
  #     - restore_cache:
  #         key: repo-{{ .Environment.CIRCLE_SHA1 }}

  #     - run:
  #         name: Run Jest Tests
  #         command: yarn run test
  #         working_directory: api
  #         when: always
  #     - run:
  #         name: Install Dockerize
  #         command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
  #         environment:
  #           DOCKERIZE_VERSION: v0.3.0
  #         when: always
  #     - run:
  #         name: Wait For Database
  #         command: dockerize -wait tcp://localhost:5432 -timeout 1m
  #         when: always
  #     - run:
  #         name: Build Typescript
  #         command: yarn build
  #         working_directory: api
  #         when: always
  #     - run:
  #         name: Run Migrations
  #         command: yarn run migrate
  #         working_directory: api
  #         when: always
  #     - run:
  #         name: Initialize Elasticsearch Indices
  #         command: yarn run reindex
  #         working_directory: api
  #         when: always
  #     - run:
  #         name: Run Lab Tests
  #         command: yarn run test:lab:ci
  #         working_directory: api
  #         when: always
  #     - save_cache:
  #         key: dependency-cache-{{ checksum "api/package.json" }}
  #         paths:
  #           - api/node_modules
  #     - store_test_results:
  #         path: api/reports
  #         when: always

workflows:
  version: 2.1
  unit_test:
    jobs:
      - test
